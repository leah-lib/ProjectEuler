#The prime 41, can be written as the sum of six consecutive primes:

#41 = 2 + 3 + 5 + 7 + 11 + 13
#This is the longest sum of consecutive primes that adds to a prime below one-hundred.

#The longest sum of consecutive primes below one-thousand that adds to a prime, contains 21 terms, and is equal to 953.

#Which prime, below one-million, can be written as the sum of the most consecutive primes?

import math
import time




primes = {}
primes[2] = True

prime_list = [2]

for i in range (3,1000000):
    compos = False
    for n in prime_list:
        if n <= math.sqrt(i):
            if i%n == 0:
                compos = True
                break
        else:
            break
    if compos == False and prime_list[-1] < math.sqrt(i):
        for k in range(prime_list[-1]+1, int(math.sqrt(i))+1):
            if i%k == 0:
                compos = True
                break

    if compos == False:
        primes[i] = True
        prime_list.append(i)
        




num = 0
longest = 0

    



len_p = len(prime_list)



sum_tally = 0

for n in range (0, len_p):
    sum_tally += prime_list[n]
    primes[prime_list[n]] = sum_tally

for a in range (0, len_p-1):
    if len_p-a < longest:
        break
    if a*longest > 1000000:
        break
    b = a + longest
    sum_primes = primes[prime_list[b]]-primes[prime_list[a]]+prime_list[a]
    while True:
        if sum_primes > 1000000:
            break
        if sum_primes in primes:
            longest = b-a+1
            num = sum_primes
        b+=1
        if b >= len_p:
            break
        sum_primes+=prime_list[b]




                      
print num
print longest

    
